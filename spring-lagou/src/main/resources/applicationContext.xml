<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- component-scan标签解析时会向容器中注册几个内部使用的bean ->ComponentScanBeanDefinitionParser-->
<!--	<context:component-scan base-package="com.lagou.edu"/>-->
	<!--<context:property-placeholder location="classpath:db.properties"/> -->
	<!--循环依赖问题-->
<!--	<bean id="lagouBean" class="com.lagou.edu.LagouBean" init-method="initMethod" >-->
<!--		<property name="ItBean" ref="itBean"/>-->
<!--	</bean>-->
<!--	<bean id="itBean" class="com.lagou.edu.ItBean">-->
<!--		<property name="LagouBean" ref="lagouBean"/>-->
<!--	</bean>-->

<!--	<bean id="c" class="com.lagou.edu.C"></bean>-->

	<bean id="a" class="com.lagou.edu.A">
		<property name="b" ref="b"/>
	</bean>

	<bean id="b" class="com.lagou.edu.B">
		<property name="a" ref="a"/>
	</bean>


	<!--<bean id="myBeanFactoryPostProcessor" class="com.lagou.edu.MyBeanFactoryPostProcessor"/>
	<bean id="myBeanPostProcessor" class="com.lagou.edu.MyBeanPostProcessor"/>-->


<!--
	<bean id="lagouBean" class="com.lagou.edu.LagouBean" autowire="byType">
	</bean>
-->


	<!--aop配置-->
	<!--横切逻辑-->
	<bean id="logUtils" class="com.lagou.edu.LogUtils"/>

	<aop:config>
		<aop:aspect  ref="logUtils">
<!--			<aop:before method="beforeMethod" pointcut="execution(public void com.lagou.edu.LagouBean.print())"/>-->
			<aop:pointcut id="method" expression="execution(public void com.lagou.edu.*.*(..))"/>
			<aop:before method="beforeMethod"  pointcut-ref="method"/>
			<aop:after method="afterMethod"  pointcut-ref="method"/>
		</aop:aspect>
	</aop:config>


</beans>